#ifndef KEYWORDS_HPP
#define KEYWORDS_HPP

#include <QString>
#include <QSet>

static const QSet<QString> keywordsList = {
        "<?php",
        "?>",
        "{%",
        "#include",
        "#region",
        "#pragma",
        "#ifdef",
        "ifndef",
        "#define",
        "#endif",
        "%}",
        "@",
        "abstract",
        "add",
        "alias",
        "alignof",
        "and",
        "and_eq",
        "arguments",
        "as",
        "ascending",
        "asm",
        "assert",
        "associatedtype",
        "associativity",
        "async",
        "atomic_cancel",
        "atomic_commit",
        "atomic_noexcept",
        "auto",
        "await",
        "base",
        "become",
        "begin",
        "bitand",
        "bitor",
        "bool",
        "boolean",
        "box",
        "break",
        "byte",
        "case",
        "catch",
        "char",
        "char16_t",
        "char32_t",
        "checked",
        "class",
        "#column",
        "compl",
        "concept",
        "const",
        "const_cast",
        "constexpr",
        "continue",
        "convenience",
        "covariant",
        "crate",
        "debugger",
        "decimal",
        "decltype",
        "def",
        "default",
        "defer",
        "deferred",
        "defined?",
        "deinit",
        "delegate",
        "delete",
        "descending",
        "didSet",
        "do",
        "double",
        "dynamic",
        "dynamic_cast",
        "dynamicType",
        "elif",
        "else",
        "elsif",
        "end",
        "ensure",
        "enum",
        "eval",
        "event",
        "explicit",
        "export",
        "extends",
        "extension",
        "extern",
        "external",
        "factory",
        "fallthrough",
        "false",
        "final",
        "finally",
        "fixed",
        "float",
        "fn",
        "for",
        "foreach",
        "friend",
        "from",
        "func",
        "function",
        "get",
        "global",
        "goto",
        "group",
        "guard",
        "if",
        "impl",
        "implements",
        "implicit",
        "import",
        "in",
        "indirect",
        "infix",
        "init",
        "inline",
        "inout",
        "instanceof",
        "int",
        "interface",
        "internal",
        "into",
        "is",
        "join",
        "lazy",
        "left",
        "let",
        "library",
        "lock",
        "long",
        "loop",
        "macro",
        "match",
        "mod",
        "module",
        "move",
        "mut",
        "mutable",
        "mutating",
        "namespace",
        "native",
        "new",
        "next",
        "nil",
        "noexcept",
        "none",
        "nonmutating",
        "not",
        "not_eq",
        "null",
        "nullptr",
        "object",
        "offsetof",
        "operator",
        "optional",
        "or",
        "orderby",
        "or_eq",
        "out",
        "override",
        "package",
        "params",
        "part",
        "partial",
        "postfix",
        "precedence",
        "prefix",
        "priv",
        "private",
        "proc",
        "protected",
        "protocol",
        "Protocol",
        "pub",
        "public",
        "pure",
        "readonly",
        "redo",
        "ref",
        "register",
        "reinterpret_cast",
        "remove",
        "repeat",
        "required",
        "requires",
        "rescue",
        "rethrow",
        "rethrows",
        "retry",
        "return",
        "right",
        "sbyte",
        "sealed",
        "select",
        "self",
        "Self",
        "set",
        "short",
        "signed",
        "sizeof",
        "stackalloc",
        "static",
        "static_assert",
        "static_cast",
        "strictfp",
        "string",
        "struct",
        "subscript",
        "super",
        "switch",
        "sync",
        "synchronized",
        "template",
        "then",
        "this",
        "thread_local",
        "throw",
        "throws",
        "trait",
        "transaction_safe",
        "transaction_safe_dynamic",
        "transient",
        "true",
        "try",
        "type",
        "Type",
        "typealias",
        "typedef",
        "typeid",
        "typename",
        "typeof",
        "uint",
        "ulong",
        "unchecked",
        "undef",
        "union",
        "unless",
        "unowned",
        "unsafe",
        "unsigned",
        "unsized",
        "until",
        "use",
        "ushort",
        "using",
        "value",
        "var",
        "virtual",
        "void",
        "volatile",
        "wchar_t",
        "weak",
        "when",
        "where",
        "while",
        "willSet",
        "with",
        "xor",
        "xor_eq",
        "yield"
};

#endif // KEYWORDS_HPP